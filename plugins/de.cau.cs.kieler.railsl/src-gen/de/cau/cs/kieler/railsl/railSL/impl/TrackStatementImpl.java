/**
 * generated by Xtext 2.37.0
 */
package de.cau.cs.kieler.railsl.railSL.impl;

import de.cau.cs.kieler.railsl.railSL.RailSLPackage;
import de.cau.cs.kieler.railsl.railSL.RailSegment;
import de.cau.cs.kieler.railsl.railSL.TrackSpeed;
import de.cau.cs.kieler.railsl.railSL.TrackStatement;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Track Statement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.cau.cs.kieler.railsl.railSL.impl.TrackStatementImpl#getSegments <em>Segments</em>}</li>
 *   <li>{@link de.cau.cs.kieler.railsl.railSL.impl.TrackStatementImpl#getSpeed <em>Speed</em>}</li>
 *   <li>{@link de.cau.cs.kieler.railsl.railSL.impl.TrackStatementImpl#isReverse <em>Reverse</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TrackStatementImpl extends SetStatementImpl implements TrackStatement
{
  /**
   * The cached value of the '{@link #getSegments() <em>Segments</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSegments()
   * @generated
   * @ordered
   */
  protected EList<RailSegment> segments;

  /**
   * The default value of the '{@link #getSpeed() <em>Speed</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSpeed()
   * @generated
   * @ordered
   */
  protected static final TrackSpeed SPEED_EDEFAULT = TrackSpeed.STOP;

  /**
   * The cached value of the '{@link #getSpeed() <em>Speed</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSpeed()
   * @generated
   * @ordered
   */
  protected TrackSpeed speed = SPEED_EDEFAULT;

  /**
   * The default value of the '{@link #isReverse() <em>Reverse</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isReverse()
   * @generated
   * @ordered
   */
  protected static final boolean REVERSE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isReverse() <em>Reverse</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isReverse()
   * @generated
   * @ordered
   */
  protected boolean reverse = REVERSE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TrackStatementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RailSLPackage.Literals.TRACK_STATEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<RailSegment> getSegments()
  {
    if (segments == null)
    {
      segments = new EDataTypeEList<RailSegment>(RailSegment.class, this, RailSLPackage.TRACK_STATEMENT__SEGMENTS);
    }
    return segments;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TrackSpeed getSpeed()
  {
    return speed;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSpeed(TrackSpeed newSpeed)
  {
    TrackSpeed oldSpeed = speed;
    speed = newSpeed == null ? SPEED_EDEFAULT : newSpeed;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RailSLPackage.TRACK_STATEMENT__SPEED, oldSpeed, speed));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isReverse()
  {
    return reverse;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReverse(boolean newReverse)
  {
    boolean oldReverse = reverse;
    reverse = newReverse;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RailSLPackage.TRACK_STATEMENT__REVERSE, oldReverse, reverse));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RailSLPackage.TRACK_STATEMENT__SEGMENTS:
        return getSegments();
      case RailSLPackage.TRACK_STATEMENT__SPEED:
        return getSpeed();
      case RailSLPackage.TRACK_STATEMENT__REVERSE:
        return isReverse();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RailSLPackage.TRACK_STATEMENT__SEGMENTS:
        getSegments().clear();
        getSegments().addAll((Collection<? extends RailSegment>)newValue);
        return;
      case RailSLPackage.TRACK_STATEMENT__SPEED:
        setSpeed((TrackSpeed)newValue);
        return;
      case RailSLPackage.TRACK_STATEMENT__REVERSE:
        setReverse((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RailSLPackage.TRACK_STATEMENT__SEGMENTS:
        getSegments().clear();
        return;
      case RailSLPackage.TRACK_STATEMENT__SPEED:
        setSpeed(SPEED_EDEFAULT);
        return;
      case RailSLPackage.TRACK_STATEMENT__REVERSE:
        setReverse(REVERSE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RailSLPackage.TRACK_STATEMENT__SEGMENTS:
        return segments != null && !segments.isEmpty();
      case RailSLPackage.TRACK_STATEMENT__SPEED:
        return speed != SPEED_EDEFAULT;
      case RailSLPackage.TRACK_STATEMENT__REVERSE:
        return reverse != REVERSE_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (segments: ");
    result.append(segments);
    result.append(", speed: ");
    result.append(speed);
    result.append(", reverse: ");
    result.append(reverse);
    result.append(')');
    return result.toString();
  }

} //TrackStatementImpl
