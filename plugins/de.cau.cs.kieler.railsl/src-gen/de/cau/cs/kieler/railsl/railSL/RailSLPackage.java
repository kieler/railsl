/**
 * generated by Xtext 2.37.0
 */
package de.cau.cs.kieler.railsl.railSL;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see de.cau.cs.kieler.railsl.railSL.RailSLFactory
 * @model kind="package"
 * @generated
 */
public interface RailSLPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "railSL";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.cau.de/cs/kieler/railsl/RailSL";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "railSL";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  RailSLPackage eINSTANCE = de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl.init();

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.railsl.railSL.impl.RailProgramImpl <em>Rail Program</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.railsl.railSL.impl.RailProgramImpl
   * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getRailProgram()
   * @generated
   */
  int RAIL_PROGRAM = 0;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RAIL_PROGRAM__BLOCK = 0;

  /**
   * The number of structural features of the '<em>Rail Program</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RAIL_PROGRAM_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.railsl.railSL.impl.StatementImpl <em>Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.railsl.railSL.impl.StatementImpl
   * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getStatement()
   * @generated
   */
  int STATEMENT = 2;

  /**
   * The number of structural features of the '<em>Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.railsl.railSL.impl.BlockImpl <em>Block</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.railsl.railSL.impl.BlockImpl
   * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getBlock()
   * @generated
   */
  int BLOCK = 1;

  /**
   * The feature id for the '<em><b>Statements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK__STATEMENTS = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>End</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK__END = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Block</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.railsl.railSL.impl.SetStatementImpl <em>Set Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.railsl.railSL.impl.SetStatementImpl
   * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getSetStatement()
   * @generated
   */
  int SET_STATEMENT = 3;

  /**
   * The number of structural features of the '<em>Set Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.railsl.railSL.impl.TrackStatementImpl <em>Track Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.railsl.railSL.impl.TrackStatementImpl
   * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getTrackStatement()
   * @generated
   */
  int TRACK_STATEMENT = 4;

  /**
   * The feature id for the '<em><b>Segments</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRACK_STATEMENT__SEGMENTS = SET_STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Speed</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRACK_STATEMENT__SPEED = SET_STATEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Reverse</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRACK_STATEMENT__REVERSE = SET_STATEMENT_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Track Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRACK_STATEMENT_FEATURE_COUNT = SET_STATEMENT_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.railsl.railSL.impl.PointStatementImpl <em>Point Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.railsl.railSL.impl.PointStatementImpl
   * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getPointStatement()
   * @generated
   */
  int POINT_STATEMENT = 5;

  /**
   * The feature id for the '<em><b>Points</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINT_STATEMENT__POINTS = SET_STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Orientation</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINT_STATEMENT__ORIENTATION = SET_STATEMENT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Point Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINT_STATEMENT_FEATURE_COUNT = SET_STATEMENT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.railsl.railSL.impl.WaitStatementImpl <em>Wait Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.railsl.railSL.impl.WaitStatementImpl
   * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getWaitStatement()
   * @generated
   */
  int WAIT_STATEMENT = 6;

  /**
   * The number of structural features of the '<em>Wait Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WAIT_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.railsl.railSL.impl.TimeWaitStatementImpl <em>Time Wait Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.railsl.railSL.impl.TimeWaitStatementImpl
   * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getTimeWaitStatement()
   * @generated
   */
  int TIME_WAIT_STATEMENT = 7;

  /**
   * The feature id for the '<em><b>Time</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TIME_WAIT_STATEMENT__TIME = WAIT_STATEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Time Wait Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TIME_WAIT_STATEMENT_FEATURE_COUNT = WAIT_STATEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.railsl.railSL.impl.ContactWaitStatementImpl <em>Contact Wait Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.railsl.railSL.impl.ContactWaitStatementImpl
   * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getContactWaitStatement()
   * @generated
   */
  int CONTACT_WAIT_STATEMENT = 8;

  /**
   * The feature id for the '<em><b>Event</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTACT_WAIT_STATEMENT__EVENT = WAIT_STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Contact</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTACT_WAIT_STATEMENT__CONTACT = WAIT_STATEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Segment</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTACT_WAIT_STATEMENT__SEGMENT = WAIT_STATEMENT_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Contact Wait Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTACT_WAIT_STATEMENT_FEATURE_COUNT = WAIT_STATEMENT_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.railsl.railSL.impl.OpStatementImpl <em>Op Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.railsl.railSL.impl.OpStatementImpl
   * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getOpStatement()
   * @generated
   */
  int OP_STATEMENT = 9;

  /**
   * The number of structural features of the '<em>Op Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OP_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.railsl.railSL.impl.CrossingStatementImpl <em>Crossing Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.railsl.railSL.impl.CrossingStatementImpl
   * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getCrossingStatement()
   * @generated
   */
  int CROSSING_STATEMENT = 10;

  /**
   * The feature id for the '<em><b>Mode</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CROSSING_STATEMENT__MODE = OP_STATEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Crossing Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CROSSING_STATEMENT_FEATURE_COUNT = OP_STATEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.railsl.railSL.impl.LightStatementImpl <em>Light Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.railsl.railSL.impl.LightStatementImpl
   * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getLightStatement()
   * @generated
   */
  int LIGHT_STATEMENT = 11;

  /**
   * The feature id for the '<em><b>Lights</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIGHT_STATEMENT__LIGHTS = OP_STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>State</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIGHT_STATEMENT__STATE = OP_STATEMENT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Light Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIGHT_STATEMENT_FEATURE_COUNT = OP_STATEMENT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.railsl.railSL.impl.ConditionalStatementImpl <em>Conditional Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.railsl.railSL.impl.ConditionalStatementImpl
   * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getConditionalStatement()
   * @generated
   */
  int CONDITIONAL_STATEMENT = 12;

  /**
   * The feature id for the '<em><b>Lines</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL_STATEMENT__LINES = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Conditional Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.railsl.railSL.impl.ConditionalLineImpl <em>Conditional Line</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.railsl.railSL.impl.ConditionalLineImpl
   * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getConditionalLine()
   * @generated
   */
  int CONDITIONAL_LINE = 13;

  /**
   * The feature id for the '<em><b>Contact</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL_LINE__CONTACT = 0;

  /**
   * The feature id for the '<em><b>Segment</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL_LINE__SEGMENT = 1;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL_LINE__BLOCK = 2;

  /**
   * The number of structural features of the '<em>Conditional Line</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL_LINE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.railsl.railSL.impl.ParallelStatementImpl <em>Parallel Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.railsl.railSL.impl.ParallelStatementImpl
   * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getParallelStatement()
   * @generated
   */
  int PARALLEL_STATEMENT = 14;

  /**
   * The feature id for the '<em><b>Blocks</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARALLEL_STATEMENT__BLOCKS = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Parallel Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARALLEL_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.railsl.railSL.BlockEnd <em>Block End</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.railsl.railSL.BlockEnd
   * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getBlockEnd()
   * @generated
   */
  int BLOCK_END = 15;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.railsl.railSL.TrackSpeed <em>Track Speed</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.railsl.railSL.TrackSpeed
   * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getTrackSpeed()
   * @generated
   */
  int TRACK_SPEED = 16;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.railsl.railSL.PointOrientation <em>Point Orientation</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.railsl.railSL.PointOrientation
   * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getPointOrientation()
   * @generated
   */
  int POINT_ORIENTATION = 17;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.railsl.railSL.ContactEvent <em>Contact Event</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.railsl.railSL.ContactEvent
   * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getContactEvent()
   * @generated
   */
  int CONTACT_EVENT = 18;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.railsl.railSL.ContactPosition <em>Contact Position</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.railsl.railSL.ContactPosition
   * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getContactPosition()
   * @generated
   */
  int CONTACT_POSITION = 19;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.railsl.railSL.CrossingMode <em>Crossing Mode</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.railsl.railSL.CrossingMode
   * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getCrossingMode()
   * @generated
   */
  int CROSSING_MODE = 20;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.railsl.railSL.LightMode <em>Light Mode</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.railsl.railSL.LightMode
   * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getLightMode()
   * @generated
   */
  int LIGHT_MODE = 21;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.railsl.railSL.RailSegment <em>Rail Segment</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.railsl.railSL.RailSegment
   * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getRailSegment()
   * @generated
   */
  int RAIL_SEGMENT = 22;


  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.railsl.railSL.RailProgram <em>Rail Program</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Rail Program</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.RailProgram
   * @generated
   */
  EClass getRailProgram();

  /**
   * Returns the meta object for the containment reference '{@link de.cau.cs.kieler.railsl.railSL.RailProgram#getBlock <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Block</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.RailProgram#getBlock()
   * @see #getRailProgram()
   * @generated
   */
  EReference getRailProgram_Block();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.railsl.railSL.Block <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Block</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.Block
   * @generated
   */
  EClass getBlock();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.railsl.railSL.Block#getStatements <em>Statements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Statements</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.Block#getStatements()
   * @see #getBlock()
   * @generated
   */
  EReference getBlock_Statements();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.railsl.railSL.Block#getEnd <em>End</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>End</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.Block#getEnd()
   * @see #getBlock()
   * @generated
   */
  EAttribute getBlock_End();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.railsl.railSL.Statement <em>Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Statement</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.Statement
   * @generated
   */
  EClass getStatement();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.railsl.railSL.SetStatement <em>Set Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Set Statement</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.SetStatement
   * @generated
   */
  EClass getSetStatement();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.railsl.railSL.TrackStatement <em>Track Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Track Statement</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.TrackStatement
   * @generated
   */
  EClass getTrackStatement();

  /**
   * Returns the meta object for the attribute list '{@link de.cau.cs.kieler.railsl.railSL.TrackStatement#getSegments <em>Segments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Segments</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.TrackStatement#getSegments()
   * @see #getTrackStatement()
   * @generated
   */
  EAttribute getTrackStatement_Segments();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.railsl.railSL.TrackStatement#getSpeed <em>Speed</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Speed</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.TrackStatement#getSpeed()
   * @see #getTrackStatement()
   * @generated
   */
  EAttribute getTrackStatement_Speed();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.railsl.railSL.TrackStatement#isReverse <em>Reverse</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Reverse</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.TrackStatement#isReverse()
   * @see #getTrackStatement()
   * @generated
   */
  EAttribute getTrackStatement_Reverse();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.railsl.railSL.PointStatement <em>Point Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Point Statement</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.PointStatement
   * @generated
   */
  EClass getPointStatement();

  /**
   * Returns the meta object for the attribute list '{@link de.cau.cs.kieler.railsl.railSL.PointStatement#getPoints <em>Points</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Points</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.PointStatement#getPoints()
   * @see #getPointStatement()
   * @generated
   */
  EAttribute getPointStatement_Points();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.railsl.railSL.PointStatement#getOrientation <em>Orientation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Orientation</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.PointStatement#getOrientation()
   * @see #getPointStatement()
   * @generated
   */
  EAttribute getPointStatement_Orientation();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.railsl.railSL.WaitStatement <em>Wait Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Wait Statement</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.WaitStatement
   * @generated
   */
  EClass getWaitStatement();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.railsl.railSL.TimeWaitStatement <em>Time Wait Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Time Wait Statement</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.TimeWaitStatement
   * @generated
   */
  EClass getTimeWaitStatement();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.railsl.railSL.TimeWaitStatement#getTime <em>Time</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Time</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.TimeWaitStatement#getTime()
   * @see #getTimeWaitStatement()
   * @generated
   */
  EAttribute getTimeWaitStatement_Time();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.railsl.railSL.ContactWaitStatement <em>Contact Wait Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Contact Wait Statement</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.ContactWaitStatement
   * @generated
   */
  EClass getContactWaitStatement();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.railsl.railSL.ContactWaitStatement#getEvent <em>Event</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Event</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.ContactWaitStatement#getEvent()
   * @see #getContactWaitStatement()
   * @generated
   */
  EAttribute getContactWaitStatement_Event();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.railsl.railSL.ContactWaitStatement#getContact <em>Contact</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Contact</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.ContactWaitStatement#getContact()
   * @see #getContactWaitStatement()
   * @generated
   */
  EAttribute getContactWaitStatement_Contact();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.railsl.railSL.ContactWaitStatement#getSegment <em>Segment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Segment</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.ContactWaitStatement#getSegment()
   * @see #getContactWaitStatement()
   * @generated
   */
  EAttribute getContactWaitStatement_Segment();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.railsl.railSL.OpStatement <em>Op Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Op Statement</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.OpStatement
   * @generated
   */
  EClass getOpStatement();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.railsl.railSL.CrossingStatement <em>Crossing Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Crossing Statement</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.CrossingStatement
   * @generated
   */
  EClass getCrossingStatement();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.railsl.railSL.CrossingStatement#getMode <em>Mode</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Mode</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.CrossingStatement#getMode()
   * @see #getCrossingStatement()
   * @generated
   */
  EAttribute getCrossingStatement_Mode();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.railsl.railSL.LightStatement <em>Light Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Light Statement</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.LightStatement
   * @generated
   */
  EClass getLightStatement();

  /**
   * Returns the meta object for the attribute list '{@link de.cau.cs.kieler.railsl.railSL.LightStatement#getLights <em>Lights</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Lights</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.LightStatement#getLights()
   * @see #getLightStatement()
   * @generated
   */
  EAttribute getLightStatement_Lights();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.railsl.railSL.LightStatement#getState <em>State</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>State</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.LightStatement#getState()
   * @see #getLightStatement()
   * @generated
   */
  EAttribute getLightStatement_State();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.railsl.railSL.ConditionalStatement <em>Conditional Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Conditional Statement</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.ConditionalStatement
   * @generated
   */
  EClass getConditionalStatement();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.railsl.railSL.ConditionalStatement#getLines <em>Lines</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Lines</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.ConditionalStatement#getLines()
   * @see #getConditionalStatement()
   * @generated
   */
  EReference getConditionalStatement_Lines();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.railsl.railSL.ConditionalLine <em>Conditional Line</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Conditional Line</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.ConditionalLine
   * @generated
   */
  EClass getConditionalLine();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.railsl.railSL.ConditionalLine#getContact <em>Contact</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Contact</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.ConditionalLine#getContact()
   * @see #getConditionalLine()
   * @generated
   */
  EAttribute getConditionalLine_Contact();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.railsl.railSL.ConditionalLine#getSegment <em>Segment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Segment</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.ConditionalLine#getSegment()
   * @see #getConditionalLine()
   * @generated
   */
  EAttribute getConditionalLine_Segment();

  /**
   * Returns the meta object for the containment reference '{@link de.cau.cs.kieler.railsl.railSL.ConditionalLine#getBlock <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Block</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.ConditionalLine#getBlock()
   * @see #getConditionalLine()
   * @generated
   */
  EReference getConditionalLine_Block();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.railsl.railSL.ParallelStatement <em>Parallel Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Parallel Statement</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.ParallelStatement
   * @generated
   */
  EClass getParallelStatement();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.railsl.railSL.ParallelStatement#getBlocks <em>Blocks</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Blocks</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.ParallelStatement#getBlocks()
   * @see #getParallelStatement()
   * @generated
   */
  EReference getParallelStatement_Blocks();

  /**
   * Returns the meta object for enum '{@link de.cau.cs.kieler.railsl.railSL.BlockEnd <em>Block End</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Block End</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.BlockEnd
   * @generated
   */
  EEnum getBlockEnd();

  /**
   * Returns the meta object for enum '{@link de.cau.cs.kieler.railsl.railSL.TrackSpeed <em>Track Speed</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Track Speed</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.TrackSpeed
   * @generated
   */
  EEnum getTrackSpeed();

  /**
   * Returns the meta object for enum '{@link de.cau.cs.kieler.railsl.railSL.PointOrientation <em>Point Orientation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Point Orientation</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.PointOrientation
   * @generated
   */
  EEnum getPointOrientation();

  /**
   * Returns the meta object for enum '{@link de.cau.cs.kieler.railsl.railSL.ContactEvent <em>Contact Event</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Contact Event</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.ContactEvent
   * @generated
   */
  EEnum getContactEvent();

  /**
   * Returns the meta object for enum '{@link de.cau.cs.kieler.railsl.railSL.ContactPosition <em>Contact Position</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Contact Position</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.ContactPosition
   * @generated
   */
  EEnum getContactPosition();

  /**
   * Returns the meta object for enum '{@link de.cau.cs.kieler.railsl.railSL.CrossingMode <em>Crossing Mode</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Crossing Mode</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.CrossingMode
   * @generated
   */
  EEnum getCrossingMode();

  /**
   * Returns the meta object for enum '{@link de.cau.cs.kieler.railsl.railSL.LightMode <em>Light Mode</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Light Mode</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.LightMode
   * @generated
   */
  EEnum getLightMode();

  /**
   * Returns the meta object for enum '{@link de.cau.cs.kieler.railsl.railSL.RailSegment <em>Rail Segment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Rail Segment</em>'.
   * @see de.cau.cs.kieler.railsl.railSL.RailSegment
   * @generated
   */
  EEnum getRailSegment();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  RailSLFactory getRailSLFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.railsl.railSL.impl.RailProgramImpl <em>Rail Program</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.railsl.railSL.impl.RailProgramImpl
     * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getRailProgram()
     * @generated
     */
    EClass RAIL_PROGRAM = eINSTANCE.getRailProgram();

    /**
     * The meta object literal for the '<em><b>Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RAIL_PROGRAM__BLOCK = eINSTANCE.getRailProgram_Block();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.railsl.railSL.impl.BlockImpl <em>Block</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.railsl.railSL.impl.BlockImpl
     * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getBlock()
     * @generated
     */
    EClass BLOCK = eINSTANCE.getBlock();

    /**
     * The meta object literal for the '<em><b>Statements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK__STATEMENTS = eINSTANCE.getBlock_Statements();

    /**
     * The meta object literal for the '<em><b>End</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BLOCK__END = eINSTANCE.getBlock_End();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.railsl.railSL.impl.StatementImpl <em>Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.railsl.railSL.impl.StatementImpl
     * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getStatement()
     * @generated
     */
    EClass STATEMENT = eINSTANCE.getStatement();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.railsl.railSL.impl.SetStatementImpl <em>Set Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.railsl.railSL.impl.SetStatementImpl
     * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getSetStatement()
     * @generated
     */
    EClass SET_STATEMENT = eINSTANCE.getSetStatement();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.railsl.railSL.impl.TrackStatementImpl <em>Track Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.railsl.railSL.impl.TrackStatementImpl
     * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getTrackStatement()
     * @generated
     */
    EClass TRACK_STATEMENT = eINSTANCE.getTrackStatement();

    /**
     * The meta object literal for the '<em><b>Segments</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TRACK_STATEMENT__SEGMENTS = eINSTANCE.getTrackStatement_Segments();

    /**
     * The meta object literal for the '<em><b>Speed</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TRACK_STATEMENT__SPEED = eINSTANCE.getTrackStatement_Speed();

    /**
     * The meta object literal for the '<em><b>Reverse</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TRACK_STATEMENT__REVERSE = eINSTANCE.getTrackStatement_Reverse();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.railsl.railSL.impl.PointStatementImpl <em>Point Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.railsl.railSL.impl.PointStatementImpl
     * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getPointStatement()
     * @generated
     */
    EClass POINT_STATEMENT = eINSTANCE.getPointStatement();

    /**
     * The meta object literal for the '<em><b>Points</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute POINT_STATEMENT__POINTS = eINSTANCE.getPointStatement_Points();

    /**
     * The meta object literal for the '<em><b>Orientation</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute POINT_STATEMENT__ORIENTATION = eINSTANCE.getPointStatement_Orientation();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.railsl.railSL.impl.WaitStatementImpl <em>Wait Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.railsl.railSL.impl.WaitStatementImpl
     * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getWaitStatement()
     * @generated
     */
    EClass WAIT_STATEMENT = eINSTANCE.getWaitStatement();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.railsl.railSL.impl.TimeWaitStatementImpl <em>Time Wait Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.railsl.railSL.impl.TimeWaitStatementImpl
     * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getTimeWaitStatement()
     * @generated
     */
    EClass TIME_WAIT_STATEMENT = eINSTANCE.getTimeWaitStatement();

    /**
     * The meta object literal for the '<em><b>Time</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TIME_WAIT_STATEMENT__TIME = eINSTANCE.getTimeWaitStatement_Time();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.railsl.railSL.impl.ContactWaitStatementImpl <em>Contact Wait Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.railsl.railSL.impl.ContactWaitStatementImpl
     * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getContactWaitStatement()
     * @generated
     */
    EClass CONTACT_WAIT_STATEMENT = eINSTANCE.getContactWaitStatement();

    /**
     * The meta object literal for the '<em><b>Event</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONTACT_WAIT_STATEMENT__EVENT = eINSTANCE.getContactWaitStatement_Event();

    /**
     * The meta object literal for the '<em><b>Contact</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONTACT_WAIT_STATEMENT__CONTACT = eINSTANCE.getContactWaitStatement_Contact();

    /**
     * The meta object literal for the '<em><b>Segment</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONTACT_WAIT_STATEMENT__SEGMENT = eINSTANCE.getContactWaitStatement_Segment();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.railsl.railSL.impl.OpStatementImpl <em>Op Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.railsl.railSL.impl.OpStatementImpl
     * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getOpStatement()
     * @generated
     */
    EClass OP_STATEMENT = eINSTANCE.getOpStatement();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.railsl.railSL.impl.CrossingStatementImpl <em>Crossing Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.railsl.railSL.impl.CrossingStatementImpl
     * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getCrossingStatement()
     * @generated
     */
    EClass CROSSING_STATEMENT = eINSTANCE.getCrossingStatement();

    /**
     * The meta object literal for the '<em><b>Mode</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CROSSING_STATEMENT__MODE = eINSTANCE.getCrossingStatement_Mode();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.railsl.railSL.impl.LightStatementImpl <em>Light Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.railsl.railSL.impl.LightStatementImpl
     * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getLightStatement()
     * @generated
     */
    EClass LIGHT_STATEMENT = eINSTANCE.getLightStatement();

    /**
     * The meta object literal for the '<em><b>Lights</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LIGHT_STATEMENT__LIGHTS = eINSTANCE.getLightStatement_Lights();

    /**
     * The meta object literal for the '<em><b>State</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LIGHT_STATEMENT__STATE = eINSTANCE.getLightStatement_State();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.railsl.railSL.impl.ConditionalStatementImpl <em>Conditional Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.railsl.railSL.impl.ConditionalStatementImpl
     * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getConditionalStatement()
     * @generated
     */
    EClass CONDITIONAL_STATEMENT = eINSTANCE.getConditionalStatement();

    /**
     * The meta object literal for the '<em><b>Lines</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONDITIONAL_STATEMENT__LINES = eINSTANCE.getConditionalStatement_Lines();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.railsl.railSL.impl.ConditionalLineImpl <em>Conditional Line</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.railsl.railSL.impl.ConditionalLineImpl
     * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getConditionalLine()
     * @generated
     */
    EClass CONDITIONAL_LINE = eINSTANCE.getConditionalLine();

    /**
     * The meta object literal for the '<em><b>Contact</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONDITIONAL_LINE__CONTACT = eINSTANCE.getConditionalLine_Contact();

    /**
     * The meta object literal for the '<em><b>Segment</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONDITIONAL_LINE__SEGMENT = eINSTANCE.getConditionalLine_Segment();

    /**
     * The meta object literal for the '<em><b>Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONDITIONAL_LINE__BLOCK = eINSTANCE.getConditionalLine_Block();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.railsl.railSL.impl.ParallelStatementImpl <em>Parallel Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.railsl.railSL.impl.ParallelStatementImpl
     * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getParallelStatement()
     * @generated
     */
    EClass PARALLEL_STATEMENT = eINSTANCE.getParallelStatement();

    /**
     * The meta object literal for the '<em><b>Blocks</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARALLEL_STATEMENT__BLOCKS = eINSTANCE.getParallelStatement_Blocks();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.railsl.railSL.BlockEnd <em>Block End</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.railsl.railSL.BlockEnd
     * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getBlockEnd()
     * @generated
     */
    EEnum BLOCK_END = eINSTANCE.getBlockEnd();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.railsl.railSL.TrackSpeed <em>Track Speed</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.railsl.railSL.TrackSpeed
     * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getTrackSpeed()
     * @generated
     */
    EEnum TRACK_SPEED = eINSTANCE.getTrackSpeed();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.railsl.railSL.PointOrientation <em>Point Orientation</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.railsl.railSL.PointOrientation
     * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getPointOrientation()
     * @generated
     */
    EEnum POINT_ORIENTATION = eINSTANCE.getPointOrientation();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.railsl.railSL.ContactEvent <em>Contact Event</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.railsl.railSL.ContactEvent
     * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getContactEvent()
     * @generated
     */
    EEnum CONTACT_EVENT = eINSTANCE.getContactEvent();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.railsl.railSL.ContactPosition <em>Contact Position</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.railsl.railSL.ContactPosition
     * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getContactPosition()
     * @generated
     */
    EEnum CONTACT_POSITION = eINSTANCE.getContactPosition();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.railsl.railSL.CrossingMode <em>Crossing Mode</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.railsl.railSL.CrossingMode
     * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getCrossingMode()
     * @generated
     */
    EEnum CROSSING_MODE = eINSTANCE.getCrossingMode();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.railsl.railSL.LightMode <em>Light Mode</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.railsl.railSL.LightMode
     * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getLightMode()
     * @generated
     */
    EEnum LIGHT_MODE = eINSTANCE.getLightMode();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.railsl.railSL.RailSegment <em>Rail Segment</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.railsl.railSL.RailSegment
     * @see de.cau.cs.kieler.railsl.railSL.impl.RailSLPackageImpl#getRailSegment()
     * @generated
     */
    EEnum RAIL_SEGMENT = eINSTANCE.getRailSegment();

  }

} //RailSLPackage
